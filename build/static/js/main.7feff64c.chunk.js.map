{"version":3,"sources":["Config.ts","GraphService.ts","AuthProvider.tsx","NavBar.tsx","ErrorMessage.tsx","Welcome.tsx","CalendarDayRow.tsx","Calendar.tsx","NewEvent.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["config","appId","redirectUri","scopes","graph","require","getAuthenticatedClient","accessToken","Client","init","authProvider","done","getUserDetails","a","client","api","select","get","user","getUserWeekCalendar","timeZone","startDate","startDateTime","format","endDateTime","moment","add","header","query","orderby","top","response","events","pageIterator","PageIterator","event","push","iterate","value","createEvent","newEvent","post","withAuthProvider","WrappedComponent","props","publicClientApplication","state","error","isAuthenticated","PublicClientApplication","auth","clientId","cache","cacheLocation","storeAuthStateInCookie","accounts","this","getAllAccounts","length","getUserProfile","login","logout","getAccessToken","setError","message","debug","setErrorMessage","loginPopup","prompt","setState","normalizeError","Error","acquireTokenSilent","account","silentResult","isInteractionRequired","acquireTokenPopup","interactiveResult","displayName","email","mail","userPrincipalName","mailboxSettings","timeFormat","normalizedError","errParts","split","JSON","stringify","indexOf","React","Component","UserAvatar","avatar","src","alt","className","style","width","AuthNavItem","UncontrolledDropdown","DropdownToggle","nav","caret","DropdownMenu","right","DropdownItem","divider","onClick","authButtonMethod","NavItem","Button","color","NavBar","toggle","bind","isOpen","calendarLink","to","exact","Navbar","dark","expand","fixed","Container","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavLink","target","ErrorMessage","Alert","WelcomeContent","Welcome","Jumbotron","formatMap","formatDateTime","dateTime","undefined","CalendarDayRow","rowClass","day","date","dateCell","rowSpan","Fragment","map","index","key","id","start","end","subject","organizer","emailAddress","name","eventsLoaded","startOfWeek","ianaTimeZone","findOneIana","tz","valueOf","startOf","utc","sunday","monday","tuesday","wednesday","thursday","friday","saturday","Table","size","filter","attendees","body","disableCreate","redirect","handleUpdate","isFormDisabled","newState","attendeeEmails","forEach","address","contentType","content","Form","FormGroup","Label","for","Input","type","onChange","placeholder","Row","form","Col","disabled","path","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"yRAAaA,EAAS,CACpBC,MAAO,mBACPC,YAAa,wBACbC,OAAQ,CACN,YACA,uBACA,wB,yBCEAC,EAAQC,EAAQ,IAEpB,SAASC,EAAuBC,GAU9B,OAReH,EAAMI,OAAOC,KAAK,CAG/BC,aAAc,SAACC,GACbA,EAAK,KAAMJ,MAOV,SAAeK,EAAtB,kC,4CAAO,WAA8BL,GAA9B,iBAAAM,EAAA,6DACCC,EAASR,EAAuBC,GADjC,SAGcO,EAChBC,IAAI,OACJC,OAAO,sDACPC,MANE,cAGCC,EAHD,yBAQEA,GARF,4C,sBAaA,SAAeC,EAAtB,sC,4CAAO,WAAmCZ,EAAqBa,EAAkBC,GAA1E,yBAAAR,EAAA,6DACCC,EAASR,EAAuBC,GAIlCe,EAAgBD,EAAUE,SAC1BC,EAAcC,IAAOJ,GAAWK,IAAI,EAAG,OAAOH,SAN7C,SAYgCT,EAClCC,IAAI,oBACJY,OAAO,SAF2B,4BAEIP,EAFJ,MAGlCQ,MAAM,CAAEN,cAAeA,EAAeE,YAAaA,IACnDR,OAAO,+BACPa,QAAQ,kBACRC,IAAI,IACJb,MAnBE,YAYDc,EAZC,QAqBQ,mBArBR,wBAwBCC,EAAkB,GAElBC,EAAe,IAAIC,eAAapB,EAAQiB,GAAU,SAACI,GAErD,OADAH,EAAOI,KAAKD,IACL,KA5BN,UA+BGF,EAAaI,UA/BhB,iCAiCIL,GAjCJ,iCAoCID,EAASO,OApCb,6C,sBA2CA,SAAeC,EAAtB,oC,4CAAO,WAA2BhC,EAAqBiC,GAAhD,eAAA3B,EAAA,6DACCC,EAASR,EAAuBC,GADjC,SAMQO,EACVC,IAAI,cACJ0B,KAAKD,GARH,oF,sBCvDQ,SAASE,EACrBC,GACD,yDAGE,WAAYC,GAAa,IAAD,8BACtB,cAAMA,IAHAC,6BAEgB,EAEtB,EAAKC,MAAQ,CACXC,MAAO,KACPC,iBAAiB,EACjB9B,KAAM,IAIR,EAAK2B,wBAA0B,IAAII,IAAwB,CACzDC,KAAM,CACJC,SAAUnD,EAAOC,MACjBC,YAAaF,EAAOE,aAEtBkD,MAAO,CACLC,cAAe,iBACfC,wBAAwB,KAhBN,EAH1B,gEA2BI,IAAMC,EAAWC,KAAKX,wBAAwBY,iBAE1CF,GAAYA,EAASG,OAAS,GAEhCF,KAAKG,mBA/BX,+BAmCY,IAAD,OACP,OAAO,kBAAChB,EAAD,eACLI,MAAOS,KAAKV,MAAMC,MAClBC,gBAAiBQ,KAAKV,MAAME,gBAC5B9B,KAAMsC,KAAKV,MAAM5B,KACjB0C,MAAO,kBAAM,EAAKA,SAClBC,OAAQ,kBAAM,EAAKA,UACnBC,eAAgB,SAAC3D,GAAD,OAAsB,EAAK2D,eAAe3D,IAC1D4D,SAAU,SAACC,EAAiBC,GAAlB,OAAoC,EAAKC,gBAAgBF,EAASC,KACxET,KAAKZ,UA5Cf,iKAkDYY,KAAKX,wBAAwBsB,WACjC,CACEhE,OAAQH,EAAOG,OACfiE,OAAQ,mBArDlB,uBAyDYZ,KAAKG,iBAzDjB,uDA4DMH,KAAKa,SAAS,CACZrB,iBAAiB,EACjB9B,KAAM,GACN6B,MAAOS,KAAKc,eAAL,QA/Df,8IAqEId,KAAKX,wBAAwBgB,WArEjC,8EAwEuB1D,GAxEvB,0FA0EYoD,EAAWC,KAAKX,wBACnBY,kBAEUC,QAAU,GA7E7B,sBA6EsC,IAAIa,MAAM,kBA7EhD,uBAkF+Bf,KAAKX,wBAC3B2B,mBAAmB,CAClBrE,OAAQA,EACRsE,QAASlB,EAAS,KArF5B,cAkFUmB,EAlFV,yBAwFaA,EAAanE,aAxF1B,sCA4FUiD,KAAKmB,sBAAL,MA5FV,kCA6FsCnB,KAAKX,wBAChC+B,kBAAkB,CACjBzE,OAAQA,IA/FpB,eA6FY0E,EA7FZ,yBAkGeA,EAAkBtE,aAlGjC,sTA4G8BiD,KAAKM,eAAe9D,EAAOG,QA5GzD,YA4GUI,EA5GV,wCAgHyBK,EAAeL,GAhHxC,OAgHYW,EAhHZ,OAiHQsC,KAAKa,SAAS,CACZrB,iBAAiB,EACjB9B,KAAM,CACJ4D,YAAa5D,EAAK4D,YAClBC,MAAO7D,EAAK8D,MAAQ9D,EAAK+D,kBACzB7D,SAAUF,EAAKgE,gBAAgB9D,SAC/B+D,WAAYjE,EAAKgE,gBAAgBC,YAEnCpC,MAAO,OAzHjB,yDA8HMS,KAAKa,SAAS,CACZrB,iBAAiB,EACjB9B,KAAM,GACN6B,MAAOS,KAAKc,eAAL,QAjIf,sJAuIkBN,EAAiBC,GAC/BT,KAAKa,SAAS,CACZtB,MAAO,CAAEiB,QAASA,EAASC,MAAOA,OAzIxC,qCA6IiBlB,GACb,IAAIqC,EAAkB,GACtB,GAAuB,kBAAXrC,EAAqB,CAC/B,IAAIsC,EAAWtC,EAAMuC,MAAM,KAC3BF,EAAkBC,EAAS3B,OAAS,EAClC,CAAEM,QAASqB,EAAS,GAAIpB,MAAOoB,EAAS,IACxC,CAAErB,QAASjB,QAEbqC,EAAkB,CAChBpB,QAASjB,EAAMiB,QACfC,MAAOsB,KAAKC,UAAUzC,IAG1B,OAAOqC,IA1JX,4CA6JwBrC,GACpB,SAAKA,EAAMiB,SAAWjB,EAAMiB,QAAQN,QAAU,KAK5CX,EAAMiB,QAAQyB,QAAQ,qBAAuB,GAC7C1C,EAAMiB,QAAQyB,QAAQ,yBAA2B,GACjD1C,EAAMiB,QAAQyB,QAAQ,mBAAqB,GAC3C1C,EAAMiB,QAAQyB,QAAQ,iCAAmC,OAtK/D,GAAqBC,IAAMC,W,6HCO7B,SAASC,EAAWhD,GAElB,OAAIA,EAAM1B,KAAK2E,OACN,yBACLC,IAAKlD,EAAM1B,KAAK2E,OAAQE,IAAI,OAC5BC,UAAU,wCACVC,MAAO,CAAEC,MAAO,UAIb,uBACLF,UAAU,iEACVC,MAAO,CAAEC,MAAO,UAGpB,SAASC,EAAYvD,GAGnB,OAAIA,EAAMI,gBAEN,kBAACoD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAgBC,KAAG,EAACC,OAAK,GACvB,kBAACX,EAAD,CAAY1E,KAAM0B,EAAM1B,QAE1B,kBAACsF,EAAA,EAAD,CAAcC,OAAK,GACjB,wBAAIT,UAAU,2BAA2BpD,EAAM1B,KAAK4D,aACpD,uBAAGkB,UAAU,sCAAsCpD,EAAM1B,KAAK6D,OAC9D,kBAAC2B,EAAA,EAAD,CAAcC,SAAO,IACrB,kBAACD,EAAA,EAAD,CAAcE,QAAShE,EAAMiE,kBAA7B,cAQN,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEH,QAAShE,EAAMiE,iBACfb,UAAU,6BACVgB,MAAM,QAHR,Y,IAQeC,E,kDACnB,WAAYrE,GAAqB,IAAD,8BAC9B,cAAMA,IAEDsE,OAAS,EAAKA,OAAOC,KAAZ,gBACd,EAAKrE,MAAQ,CACXsE,QAAQ,GALoB,E,qDAU9B5D,KAAKa,SAAS,CACZ+C,QAAS5D,KAAKV,MAAMsE,W,+BAMtB,IAAIC,EAAe,KASnB,OARI7D,KAAKZ,MAAMI,kBACbqE,EACE,kBAACP,EAAA,EAAD,KACE,kBAAC,IAAD,CAAeQ,GAAG,YAAYtB,UAAU,WAAWuB,OAAK,GAAxD,cAMJ,6BACE,kBAACC,EAAA,EAAD,CAAQR,MAAM,OAAOS,MAAI,EAACC,OAAO,KAAKC,MAAM,OAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,KAAK,KAAlB,wBACA,kBAACC,EAAA,EAAD,CAAenB,QAASpD,KAAK0D,SAC7B,kBAACc,EAAA,EAAD,CAAUZ,OAAQ5D,KAAKV,MAAMsE,OAAQa,QAAM,GACzC,kBAACC,EAAA,EAAD,CAAKlC,UAAU,UAAUiC,QAAM,GAC7B,kBAACnB,EAAA,EAAD,KACE,kBAAC,IAAD,CAAeQ,GAAG,IAAItB,UAAU,WAAWuB,OAAK,GAAhD,SAEDF,GAEH,kBAACa,EAAA,EAAD,CAAKlC,UAAU,sBAAsBiC,QAAM,GACzC,kBAACnB,EAAA,EAAD,KACE,kBAACqB,EAAA,EAAD,CAASL,KAAK,+DAA+DM,OAAO,UAClF,uBAAGpC,UAAU,kCADf,SAKF,kBAACG,EAAD,CACEnD,gBAAiBQ,KAAKZ,MAAMI,gBAC5B6D,iBAAkBrD,KAAKZ,MAAMiE,iBAC7B3F,KAAMsC,KAAKZ,MAAM1B,gB,GAlDCwE,IAAMC,W,SClErB0C,E,uKAEjB,IAAIpE,EAAQ,KAIZ,OAHIT,KAAKZ,MAAMqB,QACbA,EAAQ,yBAAK+B,UAAU,iCAAgC,8BAAOxC,KAAKZ,MAAMqB,SAGzE,kBAACqE,EAAA,EAAD,CAAOtB,MAAM,UACX,uBAAGhB,UAAU,QAAQxC,KAAKZ,MAAMoB,SAC/BC,O,GATiCyB,IAAMC,W,SCQhD,SAAS4C,EAAe3F,GAEtB,OAAIA,EAAMI,gBAEN,6BACE,uCAAaJ,EAAM1B,KAAK4D,YAAxB,KACA,6FAMC,kBAACiC,EAAA,EAAD,CAAQC,MAAM,UAAUJ,QAAShE,EAAMiE,kBAAvC,yB,IAGY2B,E,uKAEjB,OACE,kBAACC,EAAA,EAAD,KACE,oDACA,uBAAGzC,UAAU,QAAb,2GAGA,kBAACuC,EAAD,CACEvF,gBAAiBQ,KAAKZ,MAAMI,gBAC5B9B,KAAMsC,KAAKZ,MAAM1B,KACjB2F,iBAAkBrD,KAAKZ,MAAMiE,wB,GAXFnB,IAAMC,W,oCCfrC+C,GAAuB,CAC3B,UAAW,SACX,WAAY,WAKd,SAASC,GAAeC,EAA8BrH,GACpD,QAAiBsH,IAAbD,EACF,OAAOnH,IAAOmH,GAAUrH,OAAOmH,GAAUnH,IAAWA,G,IAInCuH,G,uKACT,IAAD,QAEHC,EADQtH,MACSuH,SAAN,UAAgBxF,KAAKZ,MAAMqG,YAA3B,aAAgB,EAAiBD,OAAQ,gBAAkB,GACtE7D,EAAa3B,KAAKZ,MAAMuC,WAExB+D,EACF,wBAAIlD,UAAU,0BAA0BmD,QAAS3F,KAAKZ,MAAMZ,OAAO0B,QAAU,EAAI,EAAIF,KAAKZ,MAAMZ,OAAO0B,QACrG,yBAAKsC,UAAU,4CAAf,UAA2DxC,KAAKZ,MAAMqG,YAAtE,aAA2D,EAAiB1H,OAAO,OACnF,yBAAKyE,UAAU,qBAAf,UAAoCxC,KAAKZ,MAAMqG,YAA/C,aAAoC,EAAiB1H,OAAO,SAC5D,yBAAKyE,UAAU,kCAAf,UAAiDxC,KAAKZ,MAAMqG,YAA5D,aAAiD,EAAiB1H,OAAO,gBAI7E,OAAIiC,KAAKZ,MAAMZ,OAAO0B,QAAU,EAI5B,wBAAIsC,UAAW+C,GACZG,EACD,6BACA,8BAMJ,kBAAC,IAAME,SAAP,KACG5F,KAAKZ,MAAMZ,OAAOqH,KACjB,SAASlH,EAAcmH,GAAgB,IAAD,QACpC,OACE,wBAAItD,UAAW+C,EAAUQ,IAAKpH,EAAMqH,IACtB,IAAVF,GAAeJ,EACjB,wBAAIlD,UAAU,0BACZ,6BAAM2C,GAAc,UAACxG,EAAMsH,aAAP,aAAC,EAAab,SAAUzD,GAA5C,MAA4DwD,GAAc,UAACxG,EAAMuH,WAAP,aAAC,EAAWd,SAAUzD,KAElG,4BACE,yBAAKa,UAAU,yBAAyB7D,EAAMwH,SAC9C,yBAAK3D,UAAU,2BAAf,UAA0C7D,EAAMyH,iBAAhD,iBAA0C,EAAiBC,oBAA3D,aAA0C,EAA+BC,gB,GAtC/CpE,IAAMC,WCgGnCjD,I,OAAAA,E,kDA5Gb,WAAYE,GAAa,IAAD,8BACtB,cAAMA,IACDE,MAAQ,CACXiH,cAAc,EACd/H,OAAQ,GACRgI,iBAAanB,GALO,E,2LAWlBrF,KAAKZ,MAAM1B,MAASsC,KAAKV,MAAMiH,a,0CAIPvG,KAAKZ,MAAMkB,eAAe9D,EAAOG,Q,cAArDI,E,OAKA0J,EAAeC,uBAAY1G,KAAKZ,MAAM1B,KAAKE,UAK3C4I,EAAcvI,KAAO0I,GAAGF,EAAcG,WAAWC,QAAQ,QAAQC,M,SAGlDnJ,EAAoBZ,EAAaiD,KAAKZ,MAAM1B,KAAKE,SAAU4I,G,OAA1EhI,E,OAGJwB,KAAKa,SAAS,CACZ0F,cAAc,EACd/H,OAAQA,EACRgI,YAAaA,I,kDAIfxG,KAAKZ,MAAMmB,SAAS,QAASwB,KAAKC,UAAL,O,+IAOjC,IAAI+E,EAAS9I,KAAO+B,KAAKV,MAAMkH,aAC3BQ,EAAS/I,KAAO8I,GAAQ7I,IAAI,EAAG,OAC/B+I,EAAUhJ,KAAO+I,GAAQ9I,IAAI,EAAG,OAChCgJ,EAAYjJ,KAAOgJ,GAAS/I,IAAI,EAAG,OACnCiJ,EAAWlJ,KAAOiJ,GAAWhJ,IAAI,EAAG,OACpCkJ,EAASnJ,KAAOkJ,GAAUjJ,IAAI,EAAG,OACjCmJ,EAAWpJ,KAAOmJ,GAAQlJ,IAAI,EAAG,OAErC,OACE,6BACE,yBAAKsE,UAAU,QACb,wBAAIA,UAAU,QAAQuE,EAAOhJ,OAAO,gBAApC,MAAwDsJ,EAAStJ,OAAO,iBACxE,kBAAC,IAAD,CAAe+F,GAAG,YAAYtB,UAAU,uBAAuBuB,OAAK,GAApE,cAEF,yBAAKvB,UAAU,iBACb,yBAAKA,UAAU,oBACb,kBAAC8E,EAAA,EAAD,CAAOC,KAAK,MACV,+BACE,4BACE,oCACA,oCACA,uCAGJ,+BACE,kBAAC,GAAD,CACE9B,KAAMsB,EACNpF,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAUuB,EAAOvB,WAC3F,kBAAC,GAAD,CACEC,KAAMuB,EACNrF,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAUwB,EAAOxB,WAC3F,kBAAC,GAAD,CACEC,KAAMwB,EACNtF,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAUyB,EAAQzB,WAC5F,kBAAC,GAAD,CACEC,KAAMyB,EACNvF,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAU0B,EAAU1B,WAC9F,kBAAC,GAAD,CACEC,KAAM0B,EACNxF,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAU2B,EAAS3B,WAC7F,kBAAC,GAAD,CACEC,KAAM2B,EACNzF,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAU4B,EAAO5B,WAC3F,kBAAC,GAAD,CACEC,KAAM4B,EACN1F,WAAY3B,KAAKZ,MAAM1B,KAAKiE,WAC5BnD,OAAQwB,KAAKV,MAAMd,OAAOgJ,QAAO,SAAA7I,GAAK,aAAIV,KAAM,UAACU,EAAMsH,aAAP,aAAC,EAAab,UAAUI,QAAU6B,EAAS7B,oB,GAlGtFtD,IAAMC,a,qEC8JdjD,K,kDA1Jb,WAAYE,GAAa,IAAD,8BACtB,cAAMA,IAEDE,MAAQ,CACX6G,QAAS,GACTsB,UAAW,GACXxB,MAAO,GACPC,IAAK,GACLwB,KAAM,GACNC,eAAe,EACfC,UAAU,GAGZ,EAAKC,aAAe,EAAKA,aAAalE,KAAlB,gBACpB,EAAKmE,eAAiB,EAAKA,eAAenE,KAApB,gBACtB,EAAK5E,YAAc,EAAKA,YAAY4E,KAAjB,gBAfG,E,yDAmBXhF,GAEX,IAAIoJ,EAAa,gBACdpJ,EAAMiG,OAAO0B,KAAO3H,EAAMiG,OAAO9F,OAGpCkB,KAAKa,SAASkH,K,uCAMd,OAAqC,IAA9B/H,KAAKV,MAAM6G,QAAQjG,QACS,IAA5BF,KAAKV,MAAM2G,MAAM/F,QACS,IAA1BF,KAAKV,MAAM4G,IAAIhG,S,iKAMlB8H,EAAiBhI,KAAKV,MAAMmI,UAAU3F,MAAM,KAC5C2F,EAAwB,GAG5BO,EAAeC,SAAQ,SAAC1G,GAClBA,EAAMrB,OAAS,GACjBuH,EAAU7I,KAAK,CACbyH,aAAc,CACZ6B,QAAS3G,QAObvC,EAAkB,CACpBmH,QAASnG,KAAKV,MAAM6G,QAEpBsB,UAAWA,EAAUvH,OAAS,EAAIuH,OAAYpC,EAG9CY,MAAO,CACLb,SAAUpF,KAAKV,MAAM2G,MACrBrI,SAAUoC,KAAKZ,MAAM1B,KAAKE,UAE5BsI,IAAK,CACHd,SAAUpF,KAAKV,MAAM4G,IACrBtI,SAAUoC,KAAKZ,MAAM1B,KAAKE,UAG5B8J,KAAM1H,KAAKV,MAAMoI,KAAKxH,OAAS,EAAI,CACjCiI,YAAa,OACbC,QAASpI,KAAKV,MAAMoI,WAClBrC,G,kBAKoBrF,KAAKZ,MAAMkB,eAAe9D,EAAOG,Q,cAArDI,E,iBAGEgC,EAAYhC,EAAaiC,G,QAG/BgB,KAAKa,SAAS,CAAE+G,UAAU,I,kDAG1B5H,KAAKZ,MAAMmB,SAAS,QAASwB,KAAKC,UAAL,O,+IAK/B,OAAIhC,KAAKV,MAAMsI,SACN,kBAAC,IAAD,CAAU9D,GAAG,cAIpB,kBAACuE,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,WAAX,WACA,kBAACC,GAAA,EAAD,CAAOC,KAAK,OACVpC,KAAK,UACLN,GAAG,UACHlH,MAAOkB,KAAKV,MAAM6G,QAClBwC,SAAU3I,KAAK6H,gBAEnB,kBAACS,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,aAAX,aACA,kBAACC,GAAA,EAAD,CAAOC,KAAK,OACVpC,KAAK,YACLN,GAAG,YACH4C,YAAY,6DACZ9J,MAAOkB,KAAKV,MAAMmI,UAClBkB,SAAU3I,KAAK6H,gBAEnB,kBAACgB,GAAA,EAAD,CAAKC,MAAI,GACP,kBAACC,GAAA,EAAD,KACE,kBAACT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,SAAX,SACA,kBAACC,GAAA,EAAD,CAAOC,KAAK,iBACVpC,KAAK,QACLN,GAAG,QACHlH,MAAOkB,KAAKV,MAAM2G,MAClB0C,SAAU3I,KAAK6H,iBAGrB,kBAACkB,GAAA,EAAD,KACE,kBAACT,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,OAAX,OACA,kBAACC,GAAA,EAAD,CAAOC,KAAK,iBACVpC,KAAK,MACLN,GAAG,MACHlH,MAAOkB,KAAKV,MAAM4G,IAClByC,SAAU3I,KAAK6H,kBAIvB,kBAACS,GAAA,EAAD,KACE,kBAACC,GAAA,EAAD,CAAOC,IAAI,QAAX,QACA,kBAACC,GAAA,EAAD,CAAOC,KAAK,WACVpC,KAAK,OACLN,GAAG,OACHlH,MAAOkB,KAAKV,MAAMoI,KAClBiB,SAAU3I,KAAK6H,gBAEnB,kBAACtE,EAAA,EAAD,CAAQC,MAAM,UACZhB,UAAU,OACVwG,SAAUhJ,KAAK8H,iBACf1E,QAASpD,KAAKjB,aAHhB,UAIA,kBAAC,IAAD,CAAe+E,GAAG,YAAYtB,UAAU,oBAAoBuB,OAAK,GAAjE,e,GAtJe7B,IAAMC,YCqCdjD,I,OAAAA,E,uKA7CH,IAAD,OACHK,EAAQ,KAQZ,OAPIS,KAAKZ,MAAMG,QACbA,EAAQ,kBAAC,EAAD,CACNiB,QAASR,KAAKZ,MAAMG,MAAMiB,QAC1BC,MAAOT,KAAKZ,MAAMG,MAAMkB,SAK1B,kBAAC,IAAD,KACE,6BACE,kBAAC,EAAD,CACEjB,gBAAiBQ,KAAKZ,MAAMI,gBAC5B6D,iBAAkBrD,KAAKZ,MAAMI,gBAAkBQ,KAAKZ,MAAMiB,OAASL,KAAKZ,MAAMgB,MAC9E1C,KAAMsC,KAAKZ,MAAM1B,OACnB,kBAAC0G,EAAA,EAAD,KACG7E,EACD,kBAAC,IAAD,CAAOwE,OAAK,EAACkF,KAAK,IAChBC,OAAQ,SAAC9J,GAAD,OACN,kBAAC,EAAD,iBAAaA,EAAb,CACEI,gBAAiB,EAAKJ,MAAMI,gBAC5B9B,KAAM,EAAK0B,MAAM1B,KACjB2F,iBAAkB,EAAKjE,MAAMgB,YAEnC,kBAAC,IAAD,CAAO2D,OAAK,EAACkF,KAAK,YAChBC,OAAQ,SAAC9J,GAAD,OACN,EAAKA,MAAMI,gBACT,kBAAC,GAAaJ,GACd,kBAAC,IAAD,CAAU0E,GAAG,SAEnB,kBAAC,IAAD,CAAOC,OAAK,EAACkF,KAAK,YAChBC,OAAQ,SAAC9J,GAAD,OACN,EAAKA,MAAMI,gBACT,kBAAC,GAAaJ,GACd,kBAAC,IAAD,CAAU0E,GAAG,gB,GApCb3B,eCDEgH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASN,OACP,kBAAC,IAAMO,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAA3K,GACL4K,QAAQ5K,MAAMA,EAAMiB,a","file":"static/js/main.7feff64c.chunk.js","sourcesContent":["export const config = {\n  appId: 'YOUR_APP_ID_HERE',\n  redirectUri: 'http://localhost:3000',\n  scopes: [\n    'user.read',\n    'mailboxsettings.read',\n    'calendars.readwrite'\n  ]\n};\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <graphServiceSnippet1>\nimport moment, { Moment } from 'moment';\nimport { Event } from 'microsoft-graph';\nimport { PageCollection, PageIterator } from '@microsoft/microsoft-graph-client';\n\nvar graph = require('@microsoft/microsoft-graph-client');\n\nfunction getAuthenticatedClient(accessToken: string) {\n  // Initialize Graph client\n  const client = graph.Client.init({\n    // Use the provided access token to authenticate\n    // requests\n    authProvider: (done: any) => {\n      done(null, accessToken);\n    }\n  });\n\n  return client;\n}\n\nexport async function getUserDetails(accessToken: string) {\n  const client = getAuthenticatedClient(accessToken);\n\n  const user = await client\n    .api('/me')\n    .select('displayName,mail,mailboxSettings,userPrincipalName')\n    .get();\n\n  return user;\n}\n// </graphServiceSnippet1>\n\n// <getUserWeekCalendarSnippet>\nexport async function getUserWeekCalendar(accessToken: string, timeZone: string, startDate: Moment): Promise<Event[]> {\n  const client = getAuthenticatedClient(accessToken);\n\n  // Generate startDateTime and endDateTime query params\n  // to display a 7-day window\n  var startDateTime = startDate.format();\n  var endDateTime = moment(startDate).add(7, 'day').format();\n\n  // GET /me/calendarview?startDateTime=''&endDateTime=''\n  // &$select=subject,organizer,start,end\n  // &$orderby=start/dateTime\n  // &$top=50\n  var response: PageCollection = await client\n    .api('/me/calendarview')\n    .header(\"Prefer\", `outlook.timezone=\"${timeZone}\"`)\n    .query({ startDateTime: startDateTime, endDateTime: endDateTime })\n    .select('subject,organizer,start,end')\n    .orderby('start/dateTime')\n    .top(50)\n    .get();\n\n  if (response[\"@odata.nextLink\"]) {\n    // Presence of the nextLink property indicates more results are available\n    // Use a page iterator to get all results\n    var events: Event[] = [];\n\n    var pageIterator = new PageIterator(client, response, (event) => {\n      events.push(event);\n      return true;\n    });\n\n    await pageIterator.iterate();\n\n    return events;\n  } else {\n\n    return response.value;\n  }\n\n}\n// </getUserWeekCalendarSnippet>\n\n// <createEventSnippet>\nexport async function createEvent(accessToken: string, newEvent: Event): Promise<Event> {\n  const client = getAuthenticatedClient(accessToken);\n\n  // POST /me/events\n  // JSON representation of the new event is sent in the\n  // request body\n  return await client\n    .api('/me/events')\n    .post(newEvent);\n}\n// </createEventSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport React from 'react';\nimport { PublicClientApplication } from '@azure/msal-browser';\n\nimport { config } from './Config';\nimport { getUserDetails } from './GraphService';\n\nexport interface AuthComponentProps {\n  error: any;\n  isAuthenticated: boolean;\n  user: any;\n  login: Function;\n  logout: Function;\n  getAccessToken: Function;\n  setError: Function;\n}\n\ninterface AuthProviderState {\n  error: any;\n  isAuthenticated: boolean;\n  user: any;\n}\n\nexport default function withAuthProvider<T extends React.Component<AuthComponentProps>>\n  (WrappedComponent: new (props: AuthComponentProps, context?: any) => T): React.ComponentClass {\n  return class extends React.Component<any, AuthProviderState> {\n    private publicClientApplication: PublicClientApplication;\n\n    constructor(props: any) {\n      super(props);\n      this.state = {\n        error: null,\n        isAuthenticated: false,\n        user: {}\n      };\n\n      // Initialize the MSAL application object\n      this.publicClientApplication = new PublicClientApplication({\n        auth: {\n          clientId: config.appId,\n          redirectUri: config.redirectUri\n        },\n        cache: {\n          cacheLocation: \"sessionStorage\",\n          storeAuthStateInCookie: true\n        }\n      });\n    }\n\n    componentDidMount() {\n      // If MSAL already has an account, the user\n      // is already logged in\n      const accounts = this.publicClientApplication.getAllAccounts();\n\n      if (accounts && accounts.length > 0) {\n        // Enhance user object with data from Graph\n        this.getUserProfile();\n      }\n    }\n\n    render() {\n      return <WrappedComponent\n        error={this.state.error}\n        isAuthenticated={this.state.isAuthenticated}\n        user={this.state.user}\n        login={() => this.login()}\n        logout={() => this.logout()}\n        getAccessToken={(scopes: string[]) => this.getAccessToken(scopes)}\n        setError={(message: string, debug: string) => this.setErrorMessage(message, debug)}\n        {...this.props} />;\n    }\n\n    async login() {\n      try {\n        // Login via popup\n        await this.publicClientApplication.loginPopup(\n          {\n            scopes: config.scopes,\n            prompt: \"select_account\"\n          });\n\n        // After login, get the user's profile\n        await this.getUserProfile();\n      }\n      catch (err) {\n        this.setState({\n          isAuthenticated: false,\n          user: {},\n          error: this.normalizeError(err)\n        });\n      }\n    }\n\n    logout() {\n      this.publicClientApplication.logout();\n    }\n\n    async getAccessToken(scopes: string[]): Promise<string> {\n      try {\n        const accounts = this.publicClientApplication\n          .getAllAccounts();\n\n        if (accounts.length <= 0) throw new Error('login_required');\n        // Get the access token silently\n        // If the cache contains a non-expired token, this function\n        // will just return the cached token. Otherwise, it will\n        // make a request to the Azure OAuth endpoint to get a token\n        var silentResult = await this.publicClientApplication\n          .acquireTokenSilent({\n            scopes: scopes,\n            account: accounts[0]\n          });\n\n        return silentResult.accessToken;\n      } catch (err) {\n        // If a silent request fails, it may be because the user needs\n        // to login or grant consent to one or more of the requested scopes\n        if (this.isInteractionRequired(err)) {\n          var interactiveResult = await this.publicClientApplication\n            .acquireTokenPopup({\n              scopes: scopes\n            });\n\n          return interactiveResult.accessToken;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    // <getUserProfileSnippet>\n    async getUserProfile() {\n      try {\n        var accessToken = await this.getAccessToken(config.scopes);\n\n        if (accessToken) {\n          // Get the user's profile from Graph\n          var user = await getUserDetails(accessToken);\n          this.setState({\n            isAuthenticated: true,\n            user: {\n              displayName: user.displayName,\n              email: user.mail || user.userPrincipalName,\n              timeZone: user.mailboxSettings.timeZone,\n              timeFormat: user.mailboxSettings.timeFormat\n            },\n            error: null\n          });\n        }\n      }\n      catch(err) {\n        this.setState({\n          isAuthenticated: false,\n          user: {},\n          error: this.normalizeError(err)\n        });\n      }\n    }\n    // </getUserProfileSnippet>\n\n    setErrorMessage(message: string, debug: string) {\n      this.setState({\n        error: { message: message, debug: debug }\n      });\n    }\n\n    normalizeError(error: string | Error): any {\n      var normalizedError = {};\n      if (typeof (error) === 'string') {\n        var errParts = error.split('|');\n        normalizedError = errParts.length > 1 ?\n          { message: errParts[1], debug: errParts[0] } :\n          { message: error };\n      } else {\n        normalizedError = {\n          message: error.message,\n          debug: JSON.stringify(error)\n        };\n      }\n      return normalizedError;\n    }\n\n    isInteractionRequired(error: Error): boolean {\n      if (!error.message || error.message.length <= 0) {\n        return false;\n      }\n\n      return (\n        error.message.indexOf('consent_required') > -1 ||\n        error.message.indexOf('interaction_required') > -1 ||\n        error.message.indexOf('login_required') > -1 ||\n        error.message.indexOf('no_account_in_silent_request') > -1\n      );\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <NavBarSnippet>\nimport React from 'react';\nimport { NavLink as RouterNavLink } from 'react-router-dom';\nimport {\n  Button,\n  Collapse,\n  Container,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem\n} from 'reactstrap';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\ninterface NavBarProps {\n  isAuthenticated: boolean;\n  authButtonMethod: any;\n  user: any;\n}\n\ninterface NavBarState {\n  isOpen: boolean;\n}\n\nfunction UserAvatar(props: any) {\n  // If a user avatar is available, return an img tag with the pic\n  if (props.user.avatar) {\n    return <img\n      src={props.user.avatar} alt=\"user\"\n      className=\"rounded-circle align-self-center mr-2\"\n      style={{ width: '32px' }}></img>;\n  }\n\n  // No avatar available, return a default icon\n  return <i\n    className=\"far fa-user-circle fa-lg rounded-circle align-self-center mr-2\"\n    style={{ width: '32px' }}></i>;\n}\n\nfunction AuthNavItem(props: NavBarProps) {\n  // If authenticated, return a dropdown with the user's info and a\n  // sign out button\n  if (props.isAuthenticated) {\n    return (\n      <UncontrolledDropdown>\n        <DropdownToggle nav caret>\n          <UserAvatar user={props.user} />\n        </DropdownToggle>\n        <DropdownMenu right>\n          <h5 className=\"dropdown-item-text mb-0\">{props.user.displayName}</h5>\n          <p className=\"dropdown-item-text text-muted mb-0\">{props.user.email}</p>\n          <DropdownItem divider />\n          <DropdownItem onClick={props.authButtonMethod}>Sign Out</DropdownItem>\n        </DropdownMenu>\n      </UncontrolledDropdown>\n    );\n  }\n\n  // Not authenticated, return a sign in link\n  return (\n    <NavItem>\n      <Button\n        onClick={props.authButtonMethod}\n        className=\"btn-link nav-link border-0\"\n        color=\"link\">Sign In</Button>\n    </NavItem>\n  );\n}\n\nexport default class NavBar extends React.Component<NavBarProps, NavBarState> {\n  constructor(props: NavBarProps) {\n    super(props);\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      isOpen: false\n    };\n  }\n\n  toggle() {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  }\n\n  render() {\n    // Only show calendar nav item if logged in\n    let calendarLink = null;\n    if (this.props.isAuthenticated) {\n      calendarLink = (\n        <NavItem>\n          <RouterNavLink to=\"/calendar\" className=\"nav-link\" exact>Calendar</RouterNavLink>\n        </NavItem>\n      );\n    }\n\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"md\" fixed=\"top\">\n          <Container>\n            <NavbarBrand href=\"/\">React Graph Tutorial</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"mr-auto\" navbar>\n                <NavItem>\n                  <RouterNavLink to=\"/\" className=\"nav-link\" exact>Home</RouterNavLink>\n                </NavItem>\n                {calendarLink}\n              </Nav>\n              <Nav className=\"justify-content-end\" navbar>\n                <NavItem>\n                  <NavLink href=\"https://developer.microsoft.com/graph/docs/concepts/overview\" target=\"_blank\">\n                    <i className=\"fas fa-external-link-alt mr-1\"></i>\n                    Docs\n                  </NavLink>\n                </NavItem>\n                <AuthNavItem\n                  isAuthenticated={this.props.isAuthenticated}\n                  authButtonMethod={this.props.authButtonMethod}\n                  user={this.props.user} />\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n// </NavBarSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <ErrorMessageSnippet>\nimport React from 'react';\nimport { Alert } from 'reactstrap';\n\ninterface ErrorMessageProps {\n  debug: string;\n  message: string;\n}\n\nexport default class ErrorMessage extends React.Component<ErrorMessageProps> {\n  render() {\n    let debug = null;\n    if (this.props.debug) {\n      debug = <pre className=\"alert-pre border bg-light p-2\"><code>{this.props.debug}</code></pre>;\n    }\n    return (\n      <Alert color=\"danger\">\n        <p className=\"mb-3\">{this.props.message}</p>\n        {debug}\n      </Alert>\n    );\n  }\n}\n// </ErrorMessageSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <WelcomeSnippet>\nimport React from 'react';\nimport {\n  Button,\n  Jumbotron\n} from 'reactstrap';\n\ninterface WelcomeProps {\n  isAuthenticated: boolean;\n  authButtonMethod: any;\n  user: any;\n}\n\ninterface WelcomeState {\n  isOpen: boolean;\n}\n\nfunction WelcomeContent(props: WelcomeProps) {\n  // If authenticated, greet the user\n  if (props.isAuthenticated) {\n    return (\n      <div>\n        <h4>Welcome {props.user.displayName}!</h4>\n        <p>Use the navigation bar at the top of the page to get started.</p>\n      </div>\n    );\n  }\n\n  // Not authenticated, present a sign in button\n  return <Button color=\"primary\" onClick={props.authButtonMethod}>Click here to sign in</Button>;\n}\n\nexport default class Welcome extends React.Component<WelcomeProps, WelcomeState> {\n  render() {\n    return (\n      <Jumbotron>\n        <h1>React Graph Tutorial</h1>\n        <p className=\"lead\">\n          This sample app shows how to use the Microsoft Graph API to access Outlook and OneDrive data from React\n        </p>\n        <WelcomeContent\n          isAuthenticated={this.props.isAuthenticated}\n          user={this.props.user}\n          authButtonMethod={this.props.authButtonMethod} />\n      </Jumbotron>\n    );\n  }\n}\n// </WelcomeSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <CalendarDayRowSnippet>\nimport React from 'react';\nimport moment, { Moment } from 'moment';\nimport { Event } from 'microsoft-graph';\n\ninterface CalendarDayRowProps {\n  date: Moment | undefined;\n  timeFormat: string;\n  events: Event[];\n}\n\ninterface FormatMap {\n  [key: string] : string;\n}\n\n// moment.js format strings are slightly\n// different than the ones returned by Graph\nconst formatMap: FormatMap = {\n  \"h:mm tt\": \"h:mm A\",\n  \"hh:mm tt\": \"hh:mm A\"\n};\n\n// Helper function to format Graph date/time in the user's\n// preferred format\nfunction formatDateTime(dateTime: string | undefined, format: string) {\n  if (dateTime !== undefined) {\n    return moment(dateTime).format(formatMap[format] || format);\n  }\n}\n\nexport default class CalendarDayRow extends React.Component<CalendarDayRowProps> {\n  render() {\n    var today = moment();\n    var rowClass = today.day() === this.props.date?.day() ? 'table-warning' : '';\n    var timeFormat = this.props.timeFormat;\n\n    var dateCell = (\n      <td className='calendar-view-date-cell' rowSpan={this.props.events.length <= 0 ? 1 : this.props.events.length}>\n        <div className='calendar-view-date float-left text-right'>{this.props.date?.format('DD')}</div>\n        <div className='calendar-view-day'>{this.props.date?.format('dddd')}</div>\n        <div className='calendar-view-month text-muted'>{this.props.date?.format('MMMM, YYYY')}</div>\n      </td>\n    );\n\n    if (this.props.events.length <= 0)\n    {\n      // Render an empty row for the day\n      return (\n        <tr className={rowClass}>\n          {dateCell}\n          <td></td>\n          <td></td>\n        </tr>\n      );\n    }\n\n    return (\n      <React.Fragment>\n        {this.props.events.map(\n          function(event: Event, index: Number) {\n            return (\n              <tr className={rowClass} key={event.id}>\n                { index === 0 && dateCell }\n                <td className=\"calendar-view-timespan\">\n                  <div>{formatDateTime(event.start?.dateTime, timeFormat)} - {formatDateTime(event.end?.dateTime, timeFormat)}</div>\n                </td>\n                <td>\n                  <div className=\"calendar-view-subject\">{event.subject}</div>\n                  <div className=\"calendar-view-organizer\">{event.organizer?.emailAddress?.name}</div>\n                </td>\n              </tr>\n            )\n          }\n        )}\n      </React.Fragment>\n    )\n  }\n}\n// </CalendarDayRowSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport React from 'react';\nimport { NavLink as RouterNavLink } from 'react-router-dom';\nimport { Table } from 'reactstrap';\nimport moment, { Moment } from 'moment-timezone';\nimport { findOneIana } from \"windows-iana\";\nimport { Event } from 'microsoft-graph';\nimport { config } from './Config';\nimport { getUserWeekCalendar } from './GraphService';\nimport withAuthProvider, { AuthComponentProps } from './AuthProvider';\nimport CalendarDayRow from './CalendarDayRow';\nimport './Calendar.css';\n\ninterface CalendarState {\n  eventsLoaded: boolean;\n  events: Event[];\n  startOfWeek: Moment | undefined;\n}\n\nclass Calendar extends React.Component<AuthComponentProps, CalendarState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      eventsLoaded: false,\n      events: [],\n      startOfWeek: undefined\n    };\n  }\n\n  async componentDidUpdate()\n  {\n    if (this.props.user && !this.state.eventsLoaded)\n    {\n      try {\n        // Get the user's access token\n        var accessToken = await this.props.getAccessToken(config.scopes);\n\n        // Convert user's Windows time zone (\"Pacific Standard Time\")\n        // to IANA format (\"America/Los_Angeles\")\n        // Moment needs IANA format\n        var ianaTimeZone = findOneIana(this.props.user.timeZone);\n\n        // Get midnight on the start of the current week in the user's timezone,\n        // but in UTC. For example, for Pacific Standard Time, the time value would be\n        // 07:00:00Z\n        var startOfWeek = moment.tz(ianaTimeZone!.valueOf()).startOf('week').utc();\n\n        // Get the user's events\n        var events = await getUserWeekCalendar(accessToken, this.props.user.timeZone, startOfWeek);\n\n        // Update the array of events in state\n        this.setState({\n          eventsLoaded: true,\n          events: events,\n          startOfWeek: startOfWeek\n        });\n      }\n      catch (err) {\n        this.props.setError('ERROR', JSON.stringify(err));\n      }\n    }\n  }\n\n  // <renderSnippet>\n  render() {\n    var sunday = moment(this.state.startOfWeek);\n    var monday = moment(sunday).add(1, 'day');\n    var tuesday = moment(monday).add(1, 'day');\n    var wednesday = moment(tuesday).add(1, 'day');\n    var thursday = moment(wednesday).add(1, 'day');\n    var friday = moment(thursday).add(1, 'day');\n    var saturday = moment(friday).add(1, 'day');\n\n    return (\n      <div>\n        <div className=\"mb-3\">\n          <h1 className=\"mb-3\">{sunday.format('MMMM D, YYYY')} - {saturday.format('MMMM D, YYYY')}</h1>\n          <RouterNavLink to=\"/newevent\" className=\"btn btn-light btn-sm\" exact>New event</RouterNavLink>\n        </div>\n        <div className=\"calendar-week\">\n          <div className=\"table-responsive\">\n            <Table size=\"sm\">\n              <thead>\n                <tr>\n                  <th>Date</th>\n                  <th>Time</th>\n                  <th>Event</th>\n                </tr>\n              </thead>\n              <tbody>\n                <CalendarDayRow\n                  date={sunday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === sunday.day()) } />\n                <CalendarDayRow\n                  date={monday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === monday.day()) } />\n                <CalendarDayRow\n                  date={tuesday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === tuesday.day()) } />\n                <CalendarDayRow\n                  date={wednesday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === wednesday.day()) } />\n                <CalendarDayRow\n                  date={thursday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === thursday.day()) } />\n                <CalendarDayRow\n                  date={friday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === friday.day()) } />\n                <CalendarDayRow\n                  date={saturday}\n                  timeFormat={this.props.user.timeFormat}\n                  events={this.state.events.filter(event => moment(event.start?.dateTime).day() === saturday.day()) } />\n              </tbody>\n            </Table>\n          </div>\n        </div>\n      </div>\n    );\n  }\n  // </renderSnippet>\n}\n\nexport default withAuthProvider(Calendar);\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\n// <NewEventSnippet>\nimport React from 'react';\nimport { NavLink as RouterNavLink, Redirect } from 'react-router-dom';\nimport { Button, Col, Form, FormGroup, Label, Input, Row } from 'reactstrap';\nimport { Attendee, Event } from 'microsoft-graph';\nimport { config } from './Config';\nimport withAuthProvider, { AuthComponentProps } from './AuthProvider';\nimport { createEvent } from './GraphService';\n\ninterface NewEventState {\n  subject: string;\n  attendees: string;\n  start: string;\n  end: string;\n  body: string;\n  disableCreate: boolean;\n  redirect: boolean;\n}\n\nclass NewEvent extends React.Component<AuthComponentProps, NewEventState> {\n\n  constructor(props: any) {\n    super(props);\n\n    this.state = {\n      subject: '',\n      attendees: '',\n      start: '',\n      end: '',\n      body: '',\n      disableCreate: true,\n      redirect: false\n    }\n\n    this.handleUpdate = this.handleUpdate.bind(this);\n    this.isFormDisabled = this.isFormDisabled.bind(this);\n    this.createEvent = this.createEvent.bind(this);\n  }\n\n  // Called whenever an input is changed\n  handleUpdate(event: React.ChangeEvent<HTMLInputElement>) {\n    // Set the state value that maps to the input\n    var newState: any = {\n      [event.target.name]: event.target.value\n    };\n\n    this.setState(newState);\n  }\n\n  // Determines if form is ready to submit\n  // Requires a subject, start, and end\n  isFormDisabled(): boolean {\n    return this.state.subject.length === 0 ||\n           this.state.start.length === 0 ||\n           this.state.end.length === 0;\n  }\n\n  // Creates the event when user clicks Create\n  async createEvent() {\n    // Get the value of attendees and split into an array\n    var attendeeEmails = this.state.attendees.split(';');\n    var attendees: Attendee[] = [];\n\n    // Create an Attendee object for each email address\n    attendeeEmails.forEach((email) => {\n      if (email.length > 0) {\n        attendees.push({\n          emailAddress: {\n            address: email\n          }\n        });\n      }\n    });\n\n    // Create the Event object\n    var newEvent: Event = {\n      subject: this.state.subject,\n      // Only add if there are attendees\n      attendees: attendees.length > 0 ? attendees : undefined,\n      // Specify the user's time zone so\n      // the start and end are set correctly\n      start: {\n        dateTime: this.state.start,\n        timeZone: this.props.user.timeZone\n      },\n      end: {\n        dateTime: this.state.end,\n        timeZone: this.props.user.timeZone\n      },\n      // Only add if a body was given\n      body: this.state.body.length > 0 ? {\n        contentType: \"text\",\n        content: this.state.body\n      } : undefined\n    }\n\n    try {\n      // Get the user's access token\n      var accessToken = await this.props.getAccessToken(config.scopes);\n\n      // Create the event\n      await createEvent(accessToken, newEvent);\n\n      // Redirect to the calendar view\n      this.setState({ redirect: true });\n    }\n    catch (err) {\n      this.props.setError('ERROR', JSON.stringify(err));\n    }\n  }\n\n  render() {\n    if (this.state.redirect) {\n      return <Redirect to=\"/calendar\" />\n    }\n\n    return (\n      <Form>\n        <FormGroup>\n          <Label for=\"subject\">Subject</Label>\n          <Input type=\"text\"\n            name=\"subject\"\n            id=\"subject\"\n            value={this.state.subject}\n            onChange={this.handleUpdate} />\n        </FormGroup>\n        <FormGroup>\n          <Label for=\"attendees\">Attendees</Label>\n          <Input type=\"text\"\n            name=\"attendees\"\n            id=\"attendees\"\n            placeholder=\"Enter a list of email addresses, seperated by a semi-colon\"\n            value={this.state.attendees}\n            onChange={this.handleUpdate} />\n        </FormGroup>\n        <Row form>\n          <Col>\n            <FormGroup>\n              <Label for=\"start\">Start</Label>\n              <Input type=\"datetime-local\"\n                name=\"start\"\n                id=\"start\"\n                value={this.state.start}\n                onChange={this.handleUpdate} />\n            </FormGroup>\n          </Col>\n          <Col>\n            <FormGroup>\n              <Label for=\"end\">End</Label>\n              <Input type=\"datetime-local\"\n                name=\"end\"\n                id=\"end\"\n                value={this.state.end}\n                onChange={this.handleUpdate} />\n            </FormGroup>\n          </Col>\n        </Row>\n        <FormGroup>\n          <Label for=\"body\">Body</Label>\n          <Input type=\"textarea\"\n            name=\"body\"\n            id=\"body\"\n            value={this.state.body}\n            onChange={this.handleUpdate} />\n        </FormGroup>\n        <Button color=\"primary\"\n          className=\"mr-2\"\n          disabled={this.isFormDisabled()}\n          onClick={this.createEvent}>Create</Button>\n        <RouterNavLink to=\"/calendar\" className=\"btn btn-secondary\" exact>Cancel</RouterNavLink>\n      </Form>\n    )\n  }\n}\n\nexport default withAuthProvider(NewEvent);\n// </NewEventSnippet>\n","// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from 'react-router-dom';\nimport { Container } from 'reactstrap';\nimport withAuthProvider, { AuthComponentProps } from './AuthProvider';\nimport NavBar from './NavBar';\nimport ErrorMessage from './ErrorMessage';\nimport Welcome from './Welcome';\nimport Calendar from './Calendar';\nimport NewEvent from './NewEvent';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nclass App extends Component<AuthComponentProps> {\n  render() {\n    let error = null;\n    if (this.props.error) {\n      error = <ErrorMessage\n        message={this.props.error.message}\n        debug={this.props.error.debug} />;\n    }\n\n    // <renderSnippet>\n    return (\n      <Router>\n        <div>\n          <NavBar\n            isAuthenticated={this.props.isAuthenticated}\n            authButtonMethod={this.props.isAuthenticated ? this.props.logout : this.props.login}\n            user={this.props.user} />\n          <Container>\n            {error}\n            <Route exact path=\"/\"\n              render={(props) =>\n                <Welcome {...props}\n                  isAuthenticated={this.props.isAuthenticated}\n                  user={this.props.user}\n                  authButtonMethod={this.props.login} />\n              } />\n            <Route exact path=\"/calendar\"\n              render={(props) =>\n                this.props.isAuthenticated ?\n                  <Calendar {...props} /> :\n                  <Redirect to=\"/\" />\n              } />\n            <Route exact path=\"/newevent\"\n              render={(props) =>\n                this.props.isAuthenticated ?\n                  <NewEvent {...props} /> :\n                  <Redirect to=\"/\" />\n              } />\n          </Container>\n        </div>\n      </Router>\n    );\n    // </renderSnippet>\n  }\n}\n\nexport default withAuthProvider(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}